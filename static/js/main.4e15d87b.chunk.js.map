{"version":3,"sources":["BooksAPI.js","Comps/Navbar.js","Comps/Boook.js","Comps/BookShelf.js","Comps/Reeds.js","Comps/Search.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","Navbar","className","Boook","props","bok","shelfUpdater","img","imageLinks","thumbnail","style","width","height","backgroundImage","onChange","even","shelf","target","value","disabled","title","authors","BookShelf","shelfTitle","boks","cat","shelfCategory","filter","map","id","Reeds","to","Search","useState","srchResults","setSrchResults","minLength","eve","query","maxResults","qry","length","fetch","method","body","JSON","stringify","then","res","json","data","books","respose","error","totalBoks","alreadyToken","find","Bok","debounceTimeout","element","type","placeholder","App","setBoks","useEffect","console","log","book","allbooks","concat","BooksApi","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e15d87b.chunk.js","sourcesContent":["const api = \"https://reactnd-books-api.udacity.com\";\n\nlet token = localStorage.token;\n\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\n\nconst headers = {\n  Accept: \"application/json\",\n  Authorization: token,\n};\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.book);\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.books);\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: \"PUT\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ shelf }),\n  }).then((res) => res.json());\n\nexport const search = (query, maxResults) =>\n  fetch(`${api}/search`, {\n    method: \"POST\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ query, maxResults }),\n  })\n    .then((res) => res.json())\n    .then((data) => data.books);\n","import React from 'react'\nimport \"../App.css\";\n\nfunction Navbar() {\n  // my head title\n  return (\n    <div>\n        <div className=\"list-books-title\">\n            <h1>MyReads</h1>\n          </div>\n    </div>\n  )\n}\n\nexport default Navbar;\n","import React from 'react';\nfunction Boook(props) {\n    const {bok,shelfUpdater} = props;\n    // update shelf with new books\n    const updatMyShelfs = (even) => {\n        const shelf = even.target.value;\n        shelfUpdater(bok, shelf);\n      };\n    //   image (if not found)\n      let img = bok.imageLinks\n      ? bok.imageLinks.thumbnail\n      : \"https://books.google.com/googlebooks/images/no_cover_thumb.gif\";\n\n  return (\n    <div>\n         <div className=\"book\">\n                <div className=\"book-top\">\n                    <div\n                    className=\"book-cover\"\n                    style={{\n                        width: 128,\n                        height: 193,\n                        backgroundImage: \n                        `url(\"${img}\")`,\n                    }}\n                    ></div>\n                    <div className=\"book-shelf-changer\">\n                    <select onChange={updatMyShelfs} value={bok.shelf}>\n                        <option value=\"none\" disabled>\n                        Move to...\n                        </option>\n                        <option value=\"currentlyReading\">\n                        Currently Reading\n                        </option>\n                        <option value=\"wantToRead\">Want to Read</option>\n                        <option value=\"read\">Read</option>\n                        <option value=\"none\">None</option>\n                    </select>\n                    </div>\n                </div>\n                <div className=\"book-title\">{bok.title}</div>\n                <div className=\"book-authors\">{bok.authors ? bok.authors[0] : \"Auther name not found\"}</div>\n         </div>\n    </div>\n  )\n}\n\nexport default Boook\n\n","import React from 'react';\nimport Boook from './Boook';\n\n\nfunction BookShelf(props) {\n    const {shelfTitle,boks,cat,shelfUpdater} = props;\n    const shelfCategory = boks.filter(( bok ) => bok.shelf === cat );\n  return (\n    <div className=\"bookshelf\">\n        <h2 className=\"bookshelf-title\">{shelfTitle}</h2>\n        <div className=\"bookshelf-books\">\n            <ol className=\"books-grid\">\n\n            {shelfCategory.map((bok) => {\n                return (\n                    <div key={bok.id}>\n                        <Boook bok={bok} shelfUpdater={shelfUpdater}/>\n                    </div>\n                )\n            })}\n            {/* <Boook /> */}\n            </ol>\n        </div>\n        </div>\n         )\n};\n\nexport default BookShelf;\n","import React from 'react';\nimport Navbar from './Navbar';\nimport { Link } from 'react-router-dom';\nimport BookShelf from './BookShelf';\n\nfunction Reeds(props) {\n  const {boks,shelfUpdater} = props;\n  // using book BookShelf component many time with deffrient props\n  return (\n    <div>\n        <div className=\"list-books\">\n            <Navbar />\n          <div className=\"list-books-content\">\n            <div>\n              <BookShelf shelfTitle={'Currently Reading'} boks={boks} cat={\"currentlyReading\"} shelfUpdater={shelfUpdater}/>\n              <BookShelf shelfTitle={'Want to read'} boks={boks} cat={\"wantToRead\"} shelfUpdater={shelfUpdater}/>\n              <BookShelf shelfTitle={'Read'} boks={boks} cat={\"read\"} shelfUpdater={shelfUpdater}/>\n            </div>\n          </div>\n          <div className=\"open-search\">\n            <Link className=\"opn-search\" to={'/search'}>Logo</Link>\n          </div>\n        </div>\n    </div>\n  )\n}\n\nexport default Reeds\n","import React from 'react';\nimport * as BooksApi from \"../BooksAPI\";\nimport \"../App.css\";\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport DebounceInput from \"react-debounce-input\";\nimport Boook from './Boook';\nfunction Search(props) {  \n  const {boks,shelfUpdater} = props;\n  const [srchResults, setSrchResults] = useState([]);\n  // take the value from input field and validate it with api data \n  const Results = (eve) => {\n    const qry = eve.target.value;\n    if (qry.length === 0) {\n      setSrchResults([]);\n      return;\n    }\n    // using api search funcion \n    BooksApi.search(qry,30).then((respose) => {\n      if (!respose || respose.error) {\n        setSrchResults([]);\n        return;\n      }\n      \n      const totalBoks = respose.map((bok) => {\n        const alreadyToken = boks.find((Bok) => Bok.id === bok.id);\n        bok.shelf = alreadyToken ? alreadyToken.shelf : \"none\";\n        return bok;\n      });\n\n      setSrchResults(totalBoks);\n    });\n  };\n  return ( \n      <div className=\"search-books\">\n            <div className=\"search-books-bar\">\n                <Link className=\"close-search\" to={'/'}>Close</Link> \n                <div className=\"search-books-input-wrapper\">\n                <DebounceInput minLength={2} onChange={Results} debounceTimeout={150} element=\"input\" type=\"text\" placeholder=\"Search by title or author\" />\n                </div>\n           </div>\n             <div className=\"search-books-results\">\n                    <ol className=\"books-grid\">\n                    {srchResults.map((bok) => {\n                      return (\n                        <div key={bok.id}>\n                            <Boook bok={bok} shelfUpdater={shelfUpdater}/>\n                        </div>\n                      );\n                    })}\n                    </ol>\n            </div>\n      </div>\n\n  )\n}\n\nexport default Search;\n","import { Route, Routes } from 'react-router-dom';\nimport { useEffect, useState } from \"react\";\nimport * as BooksApi from \"./BooksAPI\";\nimport \"./App.css\";\nimport Reeds from './Comps/Reeds'\nimport Search from \"./Comps/Search\";\n\n\nfunction App() {\n  const [boks, setBoks] = useState([]);\n//  get all books from api\n  useEffect(() => {\n    BooksApi.getAll().then((res) => {\n      setBoks(res);\n      console.log(res);\n    });\n  }, []);\n  // update shelf state \n  const shelfUpdater = (book, shelf) => {\n    book.shelf = shelf;\n    setBoks((allbooks) => {\n      return allbooks.filter(\n        (bok) => bok.id !== book.id\n        ).concat([book]);\n    });\n    BooksApi.update(book, shelf);\n  };\n  return (\n    <div className=\"app\">\n        <Routes>\n          <Route path='/search' element={<Search boks={boks} shelfUpdater={shelfUpdater} />}/>\n          <Route path='/' exact element={<Reeds boks={boks} shelfUpdater={shelfUpdater}/>}/>\n        </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}